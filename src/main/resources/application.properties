spring.application.name=wc-java-tinyurl-service-docker
server.port=8080
server.servlet.context-path=/tinyurl
controller1.sub-path=/controller1
controller2.sub-path=/controller2

#spring.application.name=wc-java-tinyurl-service-docker
#server.port=8080
##if running from container
#spring.data.mongodb.uri=mongodb://root:root@mongo:27017/tiny_url?authSource=admin
#
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://mysql-older:3306/tiny_url
##spring.datasource.url = jdbc:mysql://localhost:3306/tiny_url  #if run from local Machine
#spring.datasource.username = root
#spring.datasource.password = root
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#
#
#server.servlet.context-path=/tinyurl
#controller1.sub-path=/controller1
#controller2.sub-path=/controller2
#
#logging.level.org.springframework.boot.autoconfigure=ERROR
#spring.data.mongodb.uri=mongodb://root:root@localhost:27017
#spring.data.mongodb.uri=mongodb://root:root@localhost:27018/tiny_url?authSource=admin  #if running from host machine

#if running from container
#spring.data.mongodb.uri=mongodb://root:root@mongo:27017/tiny_url?authSource=admin
#spring.data.mongodb.database=tiny_url

#
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=tiny_url

#if running from container#spring.data.mongodb.database=tiny_url
#spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI}
#spring.data.mongodb.host=mongo
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=tinyurl
#spring.data.mongodb.username=root
#spring.data.mongodb.password=root
#spring.data.mongodb.authentication-database=admin